Jag bestämde mig för att dela upp uppgiften i tre delar - en
huvudsida och sedan två till sidor som länkas till genom huvudsidan.

Ordningen: Jag började med huvudsidan, sedan Projekt-sidan med
alla github-länkar och sist CV-sidan.

Ordningen spelar roll eftersom jag får mer erfarenhet och lär mig
nya saker under hela uppgiftens gång. Nedan följer exempel på detta.

Flexbox: Jag hade svårt i början med flexbox eftersom jag hade problem
med att inse att det är dem direkta barnen till föräldern dit man
lagt "display:flex"-property:n som påverkas av dem medföljande
flex-vertygen som sedan läggs till (såsom "flex-direction,
"justify-content", "align-items", etc.).

Procent & em och rem: Jag tror att det klart märks att jag i början
(t.ex. i "styling.css") lutar mer mot pixels (px) som mätningsenhet
eftersom det var en enhet jag kände mig bekväm med. Sedan när man
kikar på .css-dokumentet för CV:et så ser man att jag bytt nästan 
helt över till mer responsiva enheter. Procent med flexbox gör 
att olika container-element sträcks för att matcha viewportens 
storlek. em använder jag på margin och padding för då blir 
mellanrummet till elementet relativ till dess direkta font-size.
Detta leder till att mellanrummen i de olika elementen blir mer 
konsekventa med varandra. rem sätts sedan på font-size så att 
font-sizen sedan korresponderar med root/html-elementets fontsize. 
Alltså margin/padding kollar mot elementets fontsize och fontsizen 
kollar hela vägen mot root-elementet (och dess egna fontsize).

media query: Jag använde media query en gång för att ordna så att 
bakgrundsbilden för min CV blir fixed när viewporten når en viss storlek.
Media query påminner mycket om if-statements med deras conditions
på det sättet. Jag måste kolla in närmare på media queries för det 
ser ut som att man inte kommer att ha behov för dem längre fram i tiden.

HTML-struktur: Jag tror det märks att CV:et gjordes sist speciellt när
man tar en titt på HTML-dokumentet för den sidan. När jag arbetade
med huvudsidan och Projekt-sidan så planerade jag inte min HTML något, 
utan jag valde att lite blint luta mig mot hur olika exempel online hade
gjort det. Så som det ligger just nu så har jag lärt mig att det finns
typ ett HTML-flow till det hela. Flow:en består av tre ögonblick verkar
det som. Först så kommer en så kallad "visualized structure" där man
kartlägger hur ens sida ser ut med hjälp av ritningar eller använder bild(er)
som ens referens. Sedan kan man påbörja HTML-dokumentet med en "basic 
structure" där man främst sätter upp sina divs, alt. semantic tags, vilket
kommer bli ens layout. Sist tillsätter man sina "content elements" inuti
layout-elementen, vilket består av ens text och bilder (ex. headings, 
paragraphs, img-elementet, osv.).